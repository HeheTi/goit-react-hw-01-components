{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.scss","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.style.js","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","props","username","tag","location","avatar","stats","className","style","profile","description","wrapperImg","src","alt","name","Object","entries","map","label","quantyty","itemInfo","quantity","Statistics","title","s","statistics","statList","id","percentage","statItem","backgroundColor","Math","floor","random","toString","prototype","ProtoTypes","string","arrayOf","shape","number","isRequired","FriendList","friends","isOnline","width","Table","styled","table","TransactionHistory","items","index","type","amount","currency","user","App","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,0BAA0B,MAAQ,yB,iBCAnVD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,6BAA6B,SAAW,6BAA6B,MAAQ,0BAA0B,MAAQ,0BAA0B,WAAa,iC,isGCsChNC,EApCC,SAAAC,GACd,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAEzC,OACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,sBAAKF,UAAWC,IAAME,YAAtB,UACE,qBAAKH,UAAWC,IAAMG,WAAtB,SACE,qBAAKC,IAAKP,EAAQQ,IAAI,cAAcN,UAAWC,IAAMH,WAGvD,mBAAGE,UAAWC,IAAMM,KAApB,SAA2BZ,IAC3B,oBAAGK,UAAWC,IAAML,IAApB,cAA2BA,KAC3B,mBAAGI,UAAWC,IAAMJ,SAApB,SAA+BA,OAGjC,oBAAIG,UAAWC,IAAMF,MAArB,SACGS,OAAOC,QAAQV,GAAOW,KAAI,YAAwB,IAAD,mBAArBC,EAAqB,KAAdC,EAAc,KAChD,OACE,qBAAgBZ,UAAWC,IAAMY,SAAjC,UACE,sBAAMb,UAAWC,IAAMU,MAAvB,SAA+BA,IAC/B,sBAAMX,UAAWC,IAAMa,SAAvB,SAAkCF,MAF3BD,Y,+CCdrB,IAAMI,EAAa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAwB,IAAjBjB,aAAiB,MAAT,GAAS,EAC5C,OACE,0BAASC,UAAWiB,IAAEC,WAAtB,UACGF,GAAS,oBAAIhB,UAAWiB,IAAED,MAAjB,SAAyBA,IAEnC,oBAAIhB,UAAWiB,IAAEE,SAAjB,SACGpB,EAAMW,KAAI,YAAgC,IAA7BU,EAA4B,EAA5BA,GAAIT,EAAwB,EAAxBA,MAAOU,EAAiB,EAAjBA,WACvB,OACE,qBACErB,UAAWiB,IAAEK,SAEbrB,MAAO,CAAEsB,gBAAgB,GAAD,OAd9B,IAAN,OAAWC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,OAW/C,UAKE,sBAAM3B,UAAWiB,IAAEN,MAAnB,SAA2BA,IAC3B,uBAAMX,UAAWiB,IAAEI,WAAnB,UAAgCA,EAAhC,SAJKD,YAanBL,EAAWa,UAAY,CACrBZ,MAAOa,IAAWC,OAClB/B,MAAO8B,IAAWE,QAChBF,IAAWG,MAAM,CACfZ,GAAIS,IAAWC,OACfnB,MAAOkB,IAAWC,OAClBT,WAAYQ,IAAWI,UAEzBC,YAGWnB,I,EAAAA,ICJAoB,G,MAnCI,SAAC,GAAsB,IAAD,IAAnBC,eAAmB,MAAT,GAAS,EACvC,OACE,oBAAIpC,UAAU,cAAd,SACGoC,EAAQ1B,KAAI,YAAqC,IAAlCU,EAAiC,EAAjCA,GAAItB,EAA6B,EAA7BA,OAAQS,EAAqB,EAArBA,KAAM8B,EAAe,EAAfA,SAChC,OACE,qBAAarC,UAAU,OAAvB,UACE,sBAAMA,UAAS,iBAAYqC,EAAW,QAAU,SAChD,qBAAKrC,UAAU,cAAf,SACE,qBACEA,UAAU,SACVK,IAAKP,EACLQ,IAAI,cACJgC,MAAM,SAIV,mBAAGtC,UAAU,OAAb,SAAqBO,MAXda,U,gBCLNmB,E,MAAQC,EAAOC,MAAV,oVCqCHC,EApCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,eAACJ,EAAD,CAAOvC,UAAU,sBAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,sCACA,wCACA,+CAGJ,gCACG2C,EAAMjC,KAAI,WAAiCkC,GAAW,IAAzCxB,EAAwC,EAAxCA,GAAIyB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAC9B,OACE,qBAAa/C,UAAW4C,EAAQ,IAAM,EAAI,OAAS,MAAnD,UACE,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MAHE3B,Y,QCPbzB,EAA2CqD,EAA3CrD,SAAUC,EAAiCoD,EAAjCpD,IAAKC,EAA4BmD,EAA5BnD,SAAUC,EAAkBkD,EAAlBlD,OAAQC,EAAUiD,EAAVjD,MAoB1BkD,EAlBH,WACV,OACE,qCACE,cAAC,EAAD,CACEtD,SAAUA,EACVC,IAAKA,EACLC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,IAET,cAAC,EAAD,CAAYiB,MAAM,eAAejB,MAAOmB,IAExC,cAAC,EAAD,CAAYkB,QAASA,IACrB,cAAC,EAAD,CAAoBO,MAAOO,Q,MClBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb277774.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__21Dzk\",\"wrapperImg\":\"Profile_wrapperImg__3XJz4\",\"description\":\"Profile_description__3P306\",\"avatar\":\"Profile_avatar__3a5lJ\",\"name\":\"Profile_name__gUevY\",\"tag\":\"Profile_tag__2OReH\",\"location\":\"Profile_location__3W6NQ\",\"stats\":\"Profile_stats__i3Hls\",\"itemInfo\":\"Profile_itemInfo__2K8Si\",\"label\":\"Profile_label__1avNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3691V\",\"statList\":\"Statistics_statList__OWLUG\",\"statItem\":\"Statistics_statItem__2OlBX\",\"title\":\"Statistics_title__hGwp7\",\"label\":\"Statistics_label__2DCOI\",\"percentage\":\"Statistics_percentage__2Tjvd\"};","import PropTypes from 'prop-types';\nimport style from './Profile.module.css';\n\nconst Profile = props => {\n  const { username, tag, location, avatar, stats } = props;\n\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <div className={style.wrapperImg}>\n          <img src={avatar} alt=\"User avatar\" className={style.avatar} />\n        </div>\n\n        <p className={style.name}>{username}</p>\n        <p className={style.tag}>@{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        {Object.entries(stats).map(([label, quantyty]) => {\n          return (\n            <li key={label} className={style.itemInfo}>\n              <span className={style.label}>{label}</span>\n              <span className={style.quantity}>{quantyty}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\nexport default Profile;\n","import ProtoTypes from 'prop-types';\nimport s from './Statistics.module.scss';\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = ({ title, stats = [] }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <li\n              className={s.statItem}\n              key={id}\n              style={{ backgroundColor: `${getRandomHexColor()}` }}\n            >\n              <span className={s.label}>{label}</span>\n              <span className={s.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.prototype = {\n  title: ProtoTypes.string,\n  stats: ProtoTypes.arrayOf(\n    ProtoTypes.shape({\n      id: ProtoTypes.string,\n      label: ProtoTypes.string,\n      percentage: ProtoTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FriendList.css';\nconst FriendList = ({ friends = [] }) => {\n  return (\n    <ul className=\"Friend-list\">\n      {friends.map(({ id, avatar, name, isOnline }) => {\n        return (\n          <li key={id} className=\"item\">\n            <span className={`status ${isOnline ? 'green' : 'red'}`}></span>\n            <div className=\"Wrapper-img\">\n              <img\n                className=\"avatar\"\n                src={avatar}\n                alt=\"User avatar\"\n                width=\"48\"\n              />\n            </div>\n\n            <p className=\"name\">{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  padding: 15px;\n  width: 350px;\n  text-align: center;\n  .table-head {\n    text-transform: uppercase;\n    background-color: rgb(118, 154, 238);\n  }\n  .even {\n    background-color: rgb(202, 238, 255);\n  }\n  .odd {\n    background-color: rgb(240, 243, 245);\n  }\n  th,\n  td {\n    padding: 15px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Table } from './TransactionHistory.style';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table className=\"transaction-history\">\n      <thead className=\"table-head\">\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }, index) => {\n          return (\n            <tr key={id} className={index % 2 !== 0 ? 'even' : 'odd'}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import Profile from '../Profile/Profile';\nimport user from '../../data/user.json';\nimport statistics from '../../data/statistics.json';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport friends from '../../data/friends.json';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport transactions from '../../data/transactions.json';\n\nconst { username, tag, location, avatar, stats } = user;\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        username={username}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statistics} />\n      {/* <Statistics stats={statistics} /> */}\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}