{"version":3,"sources":["components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["Profile","props","username","tag","location","avatar","stats","className","src","alt","Object","entries","map","label","quantyty","Statistics","title","id","percentage","prototype","ProtoTypes","string","arrayOf","shape","number","isRequired","FriendList","friends","name","isOnline","width","TransactionHistory","items","type","amount","currency","user","App","statistics","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAmCeA,EAjCC,SAAAC,GACd,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAEzC,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAI,cAAcF,UAAU,WAC9C,mBAAGA,UAAU,OAAb,SAAqBL,IACrB,oBAAGK,UAAU,MAAb,cAAqBJ,KACrB,mBAAGI,UAAU,WAAb,SAAyBH,OAG3B,oBAAIG,UAAU,QAAd,SACGG,OAAOC,QAAQL,GAAOM,KAAI,YAAwB,IAAD,mBAArBC,EAAqB,KAAdC,EAAc,KAChD,OACE,+BACE,sBAAMP,UAAU,QAAhB,SAAyBM,IACzB,sBAAMN,UAAU,WAAhB,SAA4BO,MAFrBD,Y,8BCffE,EAAa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAwB,IAAjBV,aAAiB,MAAT,GAAS,EAC5C,OACE,0BAASC,UAAU,aAAnB,UACGS,GAAS,oBAAIT,UAAU,QAAd,SAAuBS,IAEjC,oBAAIT,UAAU,YAAd,SACGD,EAAMM,KAAI,YAAgC,IAA7BK,EAA4B,EAA5BA,GAAIJ,EAAwB,EAAxBA,MAAOK,EAAiB,EAAjBA,WACvB,OACE,qBAAIX,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBM,IACzB,sBAAMN,UAAU,aAAhB,SAA8BW,MAFND,YAWtCF,EAAWI,UAAY,CACrBH,MAAOI,IAAWC,OAClBf,MAAOc,IAAWE,QAChBF,IAAWG,MAAM,CACfN,GAAIG,IAAWC,OACfR,MAAOO,IAAWC,OAClBH,WAAYE,IAAWI,UAEzBC,YAGWV,QCHAW,EA3BI,SAAC,GAAsB,IAAD,IAAnBC,eAAmB,MAAT,GAAS,EACvC,OACE,oBAAIpB,UAAU,cAAd,SACGoB,EAAQf,KAAI,YAAqC,IAAlCK,EAAiC,EAAjCA,GAAIZ,EAA6B,EAA7BA,OAAQuB,EAAqB,EAArBA,KAAqB,EAAfC,SAChC,OACE,qBAAatB,UAAU,OAAvB,UACE,sBAAMA,UAAU,WAChB,qBAAKA,UAAU,SAASC,IAAKH,EAAQI,IAAI,cAAcqB,MAAM,OAC7D,mBAAGvB,UAAU,OAAb,SAAqBqB,MAHdX,S,OC+BJc,EApCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,wBAAOzB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAGJ,gCACGyB,EAAMpB,KAAI,YAAqC,IAAlCK,EAAiC,EAAjCA,GAAIgB,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9B,OACE,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHElB,Y,OCNbf,EAA2CkC,EAA3ClC,SAAUC,EAAiCiC,EAAjCjC,IAAKC,EAA4BgC,EAA5BhC,SAAUC,EAAkB+B,EAAlB/B,OAAQC,EAAU8B,EAAV9B,MAoB1B+B,EAlBH,WACV,OACE,qCACE,cAAC,EAAD,CACEnC,SAAUA,EACVC,IAAKA,EACLC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,IAET,cAAC,EAAD,CAAYU,MAAM,eAAeV,MAAOgC,IAExC,cAAC,EAAD,CAAYX,QAASA,IACrB,cAAC,EAAD,CAAoBK,MAAOO,QCnBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.58631104.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Profile = props => {\n  const { username, tag, location, avatar, stats } = props;\n\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className=\"avatar\" />\n        <p className=\"name\">{username}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        {Object.entries(stats).map(([label, quantyty]) => {\n          return (\n            <li key={label}>\n              <span className=\"label\">{label}</span>\n              <span className=\"quantity\">{quantyty}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\nexport default Profile;\n","import ProtoTypes from 'prop-types';\n\nconst Statistics = ({ title, stats = [] }) => {\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <li className=\"item\" key={id}>\n              <span className=\"label\">{label}</span>\n              <span className=\"percentage\">{percentage}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.prototype = {\n  title: ProtoTypes.string,\n  stats: ProtoTypes.arrayOf(\n    ProtoTypes.shape({\n      id: ProtoTypes.string,\n      label: ProtoTypes.string,\n      percentage: ProtoTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst FriendList = ({ friends = [] }) => {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(({ id, avatar, name, isOnline }) => {\n        return (\n          <li key={id} className=\"item\">\n            <span className=\"status\"></span>\n            <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n            <p className=\"name\">{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import Profile from '../Profile/Profile';\nimport user from '../../data/user.json';\nimport statistics from '../../data/statistics.json';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport friends from '../../data/friends.json';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport transactions from '../../data/transactions.json';\n\nconst { username, tag, location, avatar, stats } = user;\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        username={username}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statistics} />\n      {/* <Statistics stats={statistics} /> */}\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}